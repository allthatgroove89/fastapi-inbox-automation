version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: saulverae/fastapi-inbox-automation:latest
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8001:8000"
    depends_on:
      - db
      - redis
      - celery_worker
    env_file:
      - .env

    restart: always
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    restart: always
  nginx:
    image: nginx:latest
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
  redis:
    image: redis:7
    ports:
      - "6379:6379"
  celery_worker:
    build:
      context: .
      dockerfile: celery_worker/Dockerfile
    command: celery -A celery_worker.tasks worker --loglevel=info
    depends_on:
      - redis
      - db
    env_file:
      - .env
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
  frontend-build:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run build"

volumes:
  postgres_data: {}
