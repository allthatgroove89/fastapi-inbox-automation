name: Build and Deploy to EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # üîß Build and push backend
      - name: Build and push backend Docker image
        run: |
          docker build -f ./backend/Dockerfile -t saulverae/inbox-backend:latest .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push saulverae/inbox-backend:latest

      # üé® Build and push frontend
      - name: Build and push frontend Docker image
        run: |
          docker build -f ./frontend/Dockerfile -t saulverae/inbox-frontend:latest .
          docker push saulverae/inbox-frontend:latest

      # ‚öôÔ∏è Build and push celery worker
      - name: Build and push celery Docker image
        run: |
          docker build -f ./celery_worker/Dockerfile -t saulverae/inbox-celery:latest .
          docker push saulverae/inbox-celery:latest

      # üåê Build and push nginx (optional if mounting config)
      - name: Build and push nginx Docker image
        run: |
          docker build -f ./nginx/Dockerfile -t saulverae/inbox-nginx:latest .
          docker push saulverae/inbox-nginx:latest

      # üöÄ Deploy to EC2
      - name: Deploy via SSH to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script_stop: true
          command_timeout: "5m"
          script: |
            echo "‚úÖ Connected to EC2"
            cd /home/ec2-user/fastapi-inbox-automation || exit 1

            # Sync latest code
            git fetch origin main
            git reset --hard origin/main

            # Rebuild frontend (if not containerized)
            cd frontend
            npm install
            npm run build
            cd ..

            # Restart stack
            docker-compose pull
            docker-compose down
            docker-compose up -d --build
            docker-compose ps
